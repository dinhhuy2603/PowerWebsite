@{
    ViewBag.Title = "Snack-Steam Page";
}
@section Styles
{
    <link rel="shortcut icon" href="~/Content/images/favicon.ico">
    <!-- App css -->
    <link href="~/Content/libs/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/bootstrap.min.css" rel="stylesheet" type="text/css" id="bs-default-stylesheet" />
    <link href="~/Content/css/app.min.css" rel="stylesheet" type="text/css" id="app-default-stylesheet" />
    <link href="~/Content/css/common.css" rel="stylesheet" type="text/css" />
    <!-- icons -->
    <link href="~/Content/css/icons.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/css/style.css" rel="stylesheet" type="text/css" />
}
<style>
    .modal-header {
        border-bottom: 1px solid #e6e6e6;
    }

    .loader-wrapper {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        background-color: #242f3f;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .loader {
        display: inline-block;
        width: 30px;
        height: 30px;
        position: relative;
        border: 4px solid #Fff;
        animation: loader 2s infinite ease;
    }

    .loader-inner {
        vertical-align: top;
        display: inline-block;
        width: 100%;
        background-color: #fff;
        animation: loader-inner 2s infinite ease-in;
    }

    @@-webkit-keyframes loader {
        0% {
            transform: rotate(0deg);
        }

        25% {
            transform: rotate(180deg);
        }

        50% {
            transform: rotate(180deg);
        }

        75% {
            transform: rotate(360deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    @@-webkit-keyframes loader-inner {
        0% {
            height: 0%;
        }

        25% {
            height: 0%;
        }

        50% {
            height: 100%;
        }

        75% {
            height: 100%;
        }

        100% {
            height: 0%;
        }
    }
</style>
<div class="content-page pd-0-mobile">
    <div class="content">
        <!-- Start Content-->
        <div class="container-fluid pd-0-mobile">
            <div class="row mt-5">
                <div class="col-xl-6 col-md-6">
                    <div class="card bg-card">
                        <h5 class="card-header text-center font-20"><span class="chart_color" id="steamPc10_status" style="background:red"></span>STEAM PC 10</h5>
                        <div class="card-body">
                            <div id="cardCollpase23" class="pt-3 d-flex justify-content-around flex-sm-column0 highcharts-figure" dir="ltr">
                                <div id="chartSteamPc10A" class="chart-container" data-colors="#f1556c"></div>
                                <div id="chartSteamPc10B" class="chart-container" data-colors="#f1556c"></div>
                            </div> <!-- collapsed end -->
                        </div> <!-- end card-body -->
                    </div> <!-- end card-->
                </div> <!-- end col-->

                <div class="col-xl-6 col-md-6">
                    <div class="card bg-card">
                        <h5 class="card-header text-center font-20"><span class="chart_color" id="steamPc15_status" style="background:red"></span>STEAM PC 15</h5>
                        <div class="card-body">
                            <div id="cardCollpase24" class="pt-3 d-flex justify-content-around flex-sm-column0 highcharts-figure" dir="ltr">
                                <div id="chartSteamPC15A" class="chart-container" data-colors="#f1556c"></div>
                                <div id="chartSteamPC15B" class="chart-container" data-colors="#f1556c"></div>
                            </div> <!-- collapsed end -->
                        </div> <!-- end card-body -->
                    </div> <!-- end card-->
                </div> <!-- end col-->

            </div>
        </div>
    </div>
</div>

@*<div class="loader-wrapper">
    <span class="loader"><span class="loader-inner"></span></span>
</div>*@


<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-more.js"></script>
<script src="https://code.highcharts.com/modules/solid-gauge.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>


<script src="~/Content/js/vendor.min.js"></script>
<script src="~/Scripts/jquery.signalR-2.4.1.min.js" type="text/javascript"></script>
<script src="~/signalr/hubs" type="text/javascript"></script>

<script src="~/Content/libs/jquery-sparkline/jquery.sparkline.min.js"></script>
<script src="~/Content/libs/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.min.js"></script>
<script src="~/Content/libs/admin-resources/jquery.vectormap/maps/jquery-jvectormap-world-mill-en.js"></script>

<!-- Dashboard 2 init -->
<script src="~/Content/js/pages/dashboard-2.init.js"></script>
<!-- App js-->
<script src="~/Content/js/app.min.js"></script>
<script type="text/javascript">
    //$(window).on("load", function () {
    //    $(".loader-wrapper").fadeOut("slow");
    //});

    function getSteamPc10Data() {
        var steamPc10Data = {};
        $.ajax({
            url: '/Steam/GetSteamPc10Data/',
            type: 'get',
            async: false,
            success: function (data) {
                steamPc10Data = data;
            },
            error: function (xhr, ajaxOptions, thrownError) {
                var errorMsg = 'Ajax request failed: ' + xhr.responseText;
                $('#content').html(errorMsg);
            }
        });
        return steamPc10Data;
    }

    function getSteamPc15Data() {
        var steamPc15Data = {};
        $.ajax({
            url: '/Steam/GetSteamPc15Data/',
            type: 'get',
            async: false,
            success: function (data) {
                steamPc15Data = data;
            },
            error: function (xhr, ajaxOptions, thrownError) {
                var errorMsg = 'Ajax request failed: ' + xhr.responseText;
                $('#content').html(errorMsg);
            }
        });
        return steamPc15Data;
    }

    var steamPc10 = getSteamPc10Data();
    var steamPc15 = getSteamPc15Data();
    $(document).ready(function () {
        Highcharts.setOptions({
            global: {
                useUTC: false
            }
        });

        //Create the Hub
        var chartHub = $.connection.chartHub;
        //Call InitChartData
        $.connection.hub.start().done(function () {
            chartHub.server.initChartSteamDashboard();
        });

        //Call to Update LineChart from Server
        chartHub.client.UpdateChartSteam = function (steamPc10_data, steamPc15_data) {
            UpdateSteamPc10Chart(steamPc10_data);
            UpdateSteamPc15Chart(steamPc15_data);
        };
    });

    function UpdateSteamPc10Chart(data) {
        if (chartSteamPc10A) {
            point = chartSteamPc10A.series[0].points[0];
            newVal = data.luu_luong_hien_tai ? parseFloat(data.luu_luong_hien_tai) : 0;
            if (newVal < 0 || newVal > 200) {
                newVal = data.luu_luong_hien_tai ? parseFloat(data.luu_luong_hien_tai) : 0;
            }
            point.update(newVal);
        }
        if (chartSteamPc10B) {
            point = chartSteamPc10B.series[0].points[0];
            newVal = data.luu_luong_tong_ngay ? parseFloat(data.luu_luong_tong_ngay) : 0;
            if (newVal < 0 || newVal > 200) {
                newVal = data.luu_luong_tong_ngay ? parseFloat(data.luu_luong_tong_ngay) : 0;
            }
            point.update(newVal);
        }
        // Update button xanh/đỏ
        if(data.status == 0){
            $('#steamPc10_status').css('background', 'green');
        }
        else{
            $('#steamPc10_status').css('background', 'red');
        }
    }

    function UpdateSteamPc15Chart(data) {
        if (chartSteamPC15A) {
            point = chartSteamPC15A.series[0].points[0];
            newVal = data.luu_luong_hien_tai ? parseFloat(data.luu_luong_hien_tai) : 0;
            if (newVal < 0 || newVal > 200) {
                newVal = data.luu_luong_hien_tai ? parseFloat(data.luu_luong_hien_tai) : 0;
            }
            point.update(newVal);
        }
        if (chartSteamPC15B) {
            point = chartSteamPC15B.series[0].points[0];
            newVal = data.luu_luong_tong_ngay ? parseFloat(data.luu_luong_tong_ngay) : 0;
            if (newVal < 0 || newVal > 200) {
                newVal = data.luu_luong_tong_ngay ? parseFloat(data.luu_luong_tong_ngay) : 0;
            }
            point.update(newVal);
        }
        // Update button xanh/đỏ
        if (data.status == 0) {
            $('#steamPc15_status').css('background', 'green');
        }
        else {
            $('#steamPc15_status').css('background', 'red');
        }
    }

    var gaugeOptions = {
        chart: {
            type: 'solidgauge',
            backgroundColor: '#1c2a47',
            colors: ['#ffff']
        },
        title: null,
        pane: {
            center: ['50%', '85%'],
            size: '140%',
            startAngle: -90,
            endAngle: 90,
            background: {
                backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || '#EEE',
                innerRadius: '60%',
                outerRadius: '100%',
                shape: 'arc'
            }
        },
        tooltip: {
            enabled: false
        },
        exporting: { enabled: false },
        // the value axis
        yAxis: {
            stops: [
                [0.1, '#55bf3b'], // green
                [0.5, '#dddf0d'], // yellow
                [0.9, '#df5353'] // red
            ],
            lineWidth: 0,
            tickWidth: 0,
            minorTickInterval: null,
            tickAmount: 2,
            title: {
                y: -75,
                fontWeight: 'bold',
                fontSize: '25px'
            },
            labels: {
                y: 16
            }
        },
        plotOptions: {
            solidgauge: {
                dataLabels: {
                    y: 5,
                    borderWidth: 0,
                    useHTML: true,
                    color: '#fff'
                }
            }
        }
    };

    var chartSteamPc10A = Highcharts.chart('chartSteamPc10A', Highcharts.merge(gaugeOptions, {
        yAxis: {
            min: 0,
            max: 200,
            title: {
                text: 'm3/h'
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Speed',
            data: [steamPc10.luu_luong_hien_tai],
            dataLabels: {
                format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                    '#fff' + '">{y}</span><br/>' +
                       '<span style="font-size:12px;color:silver"></span></div>'
            },
            tooltip: {
                valueSuffix: ' '
            }
        }]
    }));

    var chartSteamPc10B = Highcharts.chart('chartSteamPc10B', Highcharts.merge(gaugeOptions, {
        yAxis: {
            min: 0,
            max: 3000,
            title: {
                text: 'm3 in day'
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Speed',
            data: [steamPc10.luu_luong_tong_ngay],
            dataLabels: {
                format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                    '#fff' + '">{y}</span><br/>' +
                       '<span style="font-size:12px;color:silver"></span></div>'
            },
            tooltip: {
                valueSuffix: ' km/h'
            }
        }]
    }));

    var chartSteamPC15A = Highcharts.chart('chartSteamPC15A', Highcharts.merge(gaugeOptions, {
        yAxis: {
            min: 0,
            max: 200,
            title: {
                text: 'm3/h'
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Speed',
            data: [steamPc15.luu_luong_hien_tai],
            dataLabels: {
                format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                    '#fff' + '">{y}</span><br/>' +
                       '<span style="font-size:12px;color:silver"></span></div>'
            },
            tooltip: {
                valueSuffix: ' '
            }
        }]
    }));

    var chartSteamPC15B = Highcharts.chart('chartSteamPC15B', Highcharts.merge(gaugeOptions, {
        yAxis: {
            min: 0,
            max: 3000,
            title: {
                text: 'm3 in day'
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Speed',
            data: [steamPc15.luu_luong_tong_ngay],
            dataLabels: {
                format: '<div style="text-align:center"><span style="font-size:25px;color:' +
                    '#fff' + '">{y}</span><br/>' +
                       '<span style="font-size:12px;color:silver"></span></div>'
            },
            tooltip: {
                valueSuffix: ' km/h'
            }
        }]
    }));


</script>
